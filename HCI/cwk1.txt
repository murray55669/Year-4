Human-Computer Interaction - Coursework 1 - Year 15/16
Murray Crichton - s1232200 

Total - 5,000 words (~10 pages)
-Introduction       1,000 words (~2 pages)
    "describe your understanding of the ideas of Internet of Things and Interaction Design"
-Design             1,500 words (~3 pages)
    "describe the concept of a hypothetical IoT product, its interaction with the user, and the issues addressed during the interaction design process"
-Implementation     1,500 words (~3 pages)
	"describe how your hypothetical IoT product will be realised - the sensors (actuators), networking protocols, algorithms and software for data/information processing"
-Conclusions        1,000 words (~2 pages)
	"reflect on the broader context in which data from your IoT product will be used, and how it might possibly interact with information from other sources"
=======================================
With the continued growth of cheap computing power and connectivity in our everyday lives, and our ongoing obsession with being connected around the clock, it is no surprise that an increasing number of devices and objects, in homes, workplaces, or otherwise, are being integrated into the so-called "Internet of Things." 

The term Internet of Things (IoT) was supposedly first seen in 1999 as the title of a presentation, by British pioneer of technology Kevin Ashton, on the usage of electronic tagging with internet integration in a manufacturing context.[0] In the decade-and-a-half since, the core concept of the IoT has remained roughly the same – devices deployed in the real world provide information to services linked to a network – but as with any area of commercial application and technological growth new ideas, applications, and resulting products have given rise to an expanding market for IoT systems and devices, and the term now has far more meaning than anyone reading the title of Ashton's presentation could have predicted. 

The IoT, as defined by the International Telecommunication Union, is "A global infrastructure for the information society, enabling advanced services by interconnecting (physical and virtual) things based on existing and evolving interoperable information and communication technologies."[1] In a more general sense, the IoT describes network-connected "things" containing sensors or other electronics, enabling data collection and transmission. 

By utilizing this data, and the potential to embed processing power and connectivity into everyday objects, designers and engineers can create new products or services to, among other uses, enable remote monitoring, ease everyday tasks, or otherwise free up human time. 

The IoT is one of the fastest growing areas of technology [2], as market interest and the economies of scale (already well-established for much of the hardware powering the embedded devices) pushes the availability of commercial devices to new heights. Modern applications for commercial home-use IoT products include security, systems and environmental monitoring, and environmental adjustment via built-in actuators. Examples of this are Google's Nest[3] products, or Belkin's WeMo[4] products, including IoT thermostats, security cameras, light bulbs and power sockets. These devices in the commercial field are usually integrated with a cloud service, allowing the data they provide to be processed and accessed, or the device to be controlled, from anywhere with internet connectivity. 

In order to be commercially successful, these products are highly polished and well-presented, with aesthetically pleasing or unobtrusive hardware and easy-to-use interfaces, often in the form of a web or phone application. After all, if a product doesn't feel good to use, doesn't empower the user, doesn't just "magically work" if will surely fail to find a market foothold—the average consumer does not wish to spend time and effort setting up complex systems, or learning intricate interfaces. As such, how a person interacts with an IoT device is as important as the hardware of the device itself. 

The goal, then, of a designer working on an IoT product, is to abstract away the ugly technical details, data, and processes powering the system, and distil any interface between person and object down to exactly what the user wants—not, by any means, an easy task. This is where the field of Interaction Design meets that of the Internet of Things. 

Interaction Design (IxD) is, according to the Interaction Design Association, what "defines the structure and behaviour of interactive systems" and that designers "strive to create meaningful relationships between people and the products and services that they use."[5] The term "Interaction Design" has existed since the 1980s, where it was coined by designers Bill Moggridge and Bill Verplank, as a child of user-interface (UI) design, an already established field[6] more concerned with layout and presentation than the experience of the user themselves. IxD has a different focus—that of the behaviour of the user, how they interact with a product or service, how to best meet their needs.

Naturally, in many applications, both IxD and UI design will need to be considered, especially for commercial products—neither having a good-looking product that is clunky and obtuse is desirable, nor is having the best possible user experience hidden beneath an amalgamation of styles, colours, or graphics (how one would achieve such a thing is an interesting question in its own right). 

The ideas of IxD formed from a need for a high-quality user experience. As the user is the focus, the natural first step is to look at what the user wants the product, system, or service to do, be it through fictional personas, use-cases, or other user-goal descriptions. The design should then allow the user to achieve whatever it is that they wish to do, in a way that is consistent within the design; predictable relative to the design and other similar systems encountered elsewhere in the user's life; intuitive, easy to learn, and engaging; the user's actions have visible effects; and the design feeds relevant information back to the user depending on their actions or the status of the system.[7,8,9,10,11,12] While achieving all this (and perhaps more) the design should maintain a low profile—that is, the user should not consciously be aware of the design; they should not have to wait for a page to load, should not have difficulty navigating a menu. The design should present all the information and options the user wants, without clutter or excessive prompting.[13] The list of requirements go on, this is just the tip of the theoretical iceberg looking to sink any foray into the waters of interaction design.

While the “perfect interactive design” will likely be impossible to accomplish for anything beyond an incredibly simple device or system, compromise and concession can produce an experience that will suit the majority of users. To this end, an interaction designer must be able to gather data on how a potential user would utilize their design, be this through studies, prototyping and test groups, anonymous data gathering, or otherwise. This could present difficulty, depending on the design being implemented, but in the case of an Internet of Things enabled product, ought to be relatively simple. 

The requirements for testing a commercial, use-at-home IoT product could be generalized to an internet connection (not necessarily a reliable one, even, if a store-and-forward technique is used), a source of (hopefully mains) electricity, and perhaps some other common everyday items, such as a smartphone with Bluetooth connectivity. That, along with a set of appropriate potential users willing to test out a design, should be enough to gather preliminary data. 

The problem, then, is just what IoT enabled system or device is not currently (to this designers knowledge, having done a total of one Google search worth of research into the topic) available on the commercial market. What product do people want, or need, even, that doesn't yet exist. What simple everyday problem, inconvenience, or annoyance, could be solved by an IoT device.

Personally, I'm not overly concerned with security in my home—I have no children, nothing especially valuable that I own, and the property I live in is one I'm renting, behind two self-locking doors on the top floor or a multi-story flat. Products that let me ensure my garage door is closed, or that nobody has sneaked through my window to steal my television have no value to me. I'm not especially concerned with my energy usage—living on a student budget, my heating is never in use unless my extremities start to turn blue, and I don't have a household full of devices on standby sucking down power just to keep a little red light on. Having room lighting that changes colour depending on my mood is low on my list of priorities, and the same can be said for many of the more frivolous applications of IoT technology.

That being said, there are areas of my everyday life that could be improved by some automation. It would be wonderful if I didn't have to do housework; cleaning, cooking, shopping, and so forth, but a future in which my robotic butler takes care of my modest premises seems to be far off, and likely as expensive as hiring the real thing, in any case. It's not that I'm particularly against carrying out these basic tasks, they can be quite fulfilling in their own way, and usually not particularly time-consuming. The problem I have is more the amount of small things they require me to remember—did I use the last of the milk, does the meat I bought last week need to be used by yesterday or today, and so on. For all the easy fulfilment of completing basic chores, there exists some amount of planning and mental tracking, the slight discouragement that can be the difference between cooking a healthy meal and grabbing something quick and microwaveable. This can be oddly stressful, or at the very least, require some mental effort I could better spend pondering life, love, the universe, or my next coursework deadline.

Keeping track of information, for a computer system, is a much simpler task than cleaning an arbitrary space, or cooking a meal. Real-world information can often be captured as data easily stored, sorted, and operated on by a machine, whereas the dust on my kitchen table cannot be converted to a useful virtual form so easily. As such, a hypothetical IoT product capable of keeping a running inventory of food, sanitary products, cleaning products, or any other common household consumables is realistic in the sense that it could be designed and created with current technology, and that there could actually be a market for such a thing (unlikely, but for the purpose of this essay, I will assume that some ungodly marketing team has been summoned with the sole purpose of making such a product successful). 

The general concept of the product, and how a user should interact with it, is as follows. Any shopping the user brings home can be checked in to a virtual inventory representation, and when the last of that item has been used up, or the item has reached it’s expiry date, it should be checked out of the inventory system, and added to “shopping list” of items for the user to purchase next time they are out shopping. Cases may exist where the user does not want to buy more of a particular item, and the user should certainly be able to add previously-unseen items to be tracked; in these (and any other) non-standard cases alternate behaviour will be needed, with a relevant user interface.

The user’s interaction with the system should be as simple and intuitive as possible, as the goal of the product is to ease everyday stress, not increase it. To this end, any hardware used should require the minimum human input, anything that can be reasonably automated (both in terms of technology and user expectation) should be, and any interface with the user should be as clean, familiar (relative to, say, other smartphone applications, if the interface were to be implemented as such), and otherwise sensibly user-goal oriented as possible.

The user should be able to use the information produced by the product while out shopping, so again, a smartphone application seems the obvious choice. Alternatively, a web application, with a good mobile interface, could be equally viable. In either case, mobile use is a key requirement, and this naturally means compressing all the information and interaction the user would wish to have with the product down to a mobile-friendly interface. Thankfully, mobile interfaces are relatively standardized at this point, so fulfilling the user’s expectations here should not be a challenge. 

Besides the “shopping list” implementation, other methods of the user interacting with the product could be, for instance, a notification system to warn the user when supplies of a product are running low, or had been exhausted. This would not be useful for just one person using the system, but if multiple people were sharing the real-world items, this could greatly assist in preventing situations where one person used the last of some product and then was unable, either due to forgetfulness or carelessness, to ensure that it was replaced, a source of irritation (and perhaps conflict, in some cases) for those involved.

Other ways in which the user can check their inventory should be available, such as viewing a history of items checked in and out, with the ability to undo changes or make manual amendments as a fall-back for correcting user error. The system should be “intelligent” enough to handle situations where the user switches from one brand of a product, to another similar product of different brand (for instance, switching to branded bread over cheaper supermarket alternatives) without requiring prompting from the user. Some machine-learning strategies could be utilized to handle this, perhaps with the data from other users of the product being collated to help smooth out any mistakes in the algorithms powering this. To implement this, there would need to be some way for a user to manually edit the groupings or mappings between products, which could be quite difficult to realize in a user-friendly format.

Ideally, this “shopping list” system would be robust enough to handle the user switching between more than simply product brands—general dietary requirements could change, and the user could switch from, say, having pasta and rice as their staple sources of carbohydrates, to potatoes and yams. This, however, is a represents a whole separate set of issues, which could well be outside the viable scope of the product; added complexity with little benefit to the average user, potentially harming the user’s experience. 

This is a problem commonly faced by interaction designers—how much functionality does the average user, the majority of the user base, actually want or need. Can features be added without impairing the user experience, and would they ever be used. Time spent implementing such features could be better spent working on features that enhance the current user experience (such as the aforementioned ability to undo changes, which potentially adds significant development complications).

When it comes to actually implementing a product designed to keep a virtual inventory, there are numerous challenges to be overcome. Problems, generally, can arise when the data representation of something and the physical thing it represents don't match, so care must be taken to ensure a system designed to track real-world information is robust, especially to human error. The system should achieve this while being flexible enough to allow the user to carry out any task in a frustration-free manner.

The system should not require the user to change how they would normally carry out the task of keeping their real-life shelves stocked (some small adjustment may be required, but it should be quick and simple). There should ideally be a minimal set-up cost, in terms of time, technical expertise, and (less importantly for this hypothetical product) money. The any system (both hardware and software) should be enjoyable to interact with, and be as aesthetically pleasing as possible. 

To try and achieve all these goals, and accomplish the task of creating an IoT product to track the inventory of a user in their home, I propose a system that would work as follows. Upon returning home, laden with shopping, a user drops their bags somewhere, ready to be unpacked and the goods stored. When removing an item from a shopping bag, the user would run it past a (perhaps primarily barcode) scanner (with the adoption of self-checkout stations in most supermarkets, user's are likely to have a better feel for where the barcode on certain products is located, hopefully making this a more intuitive system that it otherwise would be) configured to be an “input” scanner, signifying that the item scanned is being brought in to the inventory. Any number of these “input” scanners could be scattered about the user's home, and would communicate wirelessly (be it via low-power Bluetooth or WiFi across an existing home network) with some base station. 

So long as the user ensures that they scan every product, this should allow most items available from modern supermarkets, other than, say, loose fruit and vegetables, to be added to a virtual inventory representation with ease, by some lookup on the product barcode. To handle items that do not have a barcode, some other interface could be used—perhaps an application on the user's smartphone becomes active with a button press on a scanner (with the alternate option to open it regularly), and can be used to manually input these items; or some image recognition software allows the scanning of the items themselves, or labels normally found on the items (stickers on fruit, for example).

Ideally the system would be fully automated, and the user could just hold any item in front of the input scanner, which would detect a barcode if one existed, and fall back on image recognition. This presents issues, however—when does the scanner decide it cannot find a barcode (perhaps the user is failing to present the barcode clearly to the scanner) and switch to image/object recognition? Could this recognition software be powerful enough in a low-power mobile device, or have low enough latency if carried out by a base station or cloud implementation, to make this an effective method of identifying items? Perhaps, instead, a system with separate scanners for barcodes and objects could be used, or some user input required to toggle the mode of a scanner. The technology to identify items sans-barcode certainly exists[14], the particular integration here, however, would require some testing to decide the best method, the one most likely to meet the user's expectations in a frustration-free way. After all, the product is designed to eliminate one of life's many minor hassles, not introduce more. 

If the system were robust enough, it could perhaps be extended past simply supermarket-bought items—what is proposed above is based on the assumption that, in this modern day, one does all of one's shopping at a supermarket selling largely barcode-plastered goods. This may not necessarily be the case; the discerning shopper may choose to visit market stalls, local businesses, or even grow their own produce. Some data gathering would be required to ascertain whether the set of people wishing to use an automated inventory tracking system, and the people purchasing or otherwise acquiring barcode-free goods, have a large enough intersection to make this a worthwhile avenue for development (within the previous assumption that the product discussed here has some mass-market appeal in the fist place). 

Adding items to the inventory, while challenging in it's own right, is only the first part of the problem. A list of every item a user has ever purchased, while it does have some applications, is not the goal of this product. What is needed, here, is a way to track whether or not some item has been used up, is about to go out of date, or otherwise needs to be re-stocked. This information should then form the basis of a “shopping list” of desired items, easily accessible from anywhere, most likely through a smartphone application or cloud service. Additionally, a method to add arbitrary items to this shopping list, as one-off purchases (for example, when planning a special meal) or add to the list of items that should be tracked and re-stocked whenever they run out should be presented to the user (his, however, adds some complexity to the system, and presumably any interface with it. The principals of IxD would need to be utilized to ensure that using the system was still simple, intuitive, and so on). 

To be able to present this “shopping list” to a user, some method of flagging items as having run out, or being close to running out, is required. A simple method of achieving this is to mimic the “input” system described above, where any item scanned would be added to a virtual inventory, but this time instead of adding the item, remove it from the inventory. Upon this happening, depending on the item, it should be added to the list of items to be purchased the next time the user is out shopping. Scanners responsible for taking items out the inventory could be positioned, for example, near any waste container within the user's home, or perhaps the same scanner could be used for input and output, with the ability to switch between modes. 
This could then allow the user, once finished with some item, to scan the barcode on the spent packaging before throwing it away, to inform the system that item had been expended. 

This leads to the problem that, once again, items without a barcode cannot be scanned. A potential solution here is that items without barcodes, once scanned in, would fall under a separate category in whatever interface was used to interact with the system, and could be struck off as needed when used. 

Another problem with this simple system is that it has no in-built concept of use-by-dates. This could potentially be amended by having a time-stamp added to any item taken in to the inventory, and the system having some knowledge of, for example, the shelf-life of a pint of milk. This is far from perfect, and the best this system could offer would be a rough estimate of when some item was going to expire, potentially providing a warning or suggestion to the user to check it themselves. 

I believe that, at present, there is not an adequate solution for this problem. Either the user has to input the expiry date of any item they purchase (far too laborious) or products sold in supermarkets need to have the expiry data present on the item, through some serial number or other identification method backed by the relevant data. To my knowledge, this is not common practice, although it is a possibility, and could come about in the near-future.[15]

Another issue is the inability to track how much of a product has been used. Returning to the pint of milk example, the system has a simple binary notion of “the inventory contains milk” or “the inventory does not contain milk,” and has no concept of “there is only 10% of the pint of milk remaining.” This could result in a situation where, if the user had some, say, large baking project in mind, the fact that only a small amount of milk is available may mean the system falsely informs the user that they have an adequate supply of milk. A potential solution to this problem would be having more sensors networked to somehow measure how much of each item in the inventory was available. This significantly complicates the product, however, and would likely harm the user experience—the question would then arise of how to automate this completely, which may not be possible, putting the onus on the user to ensure they correctly store an item in such a way that the amount remaining could be monitored. Such a requirement would introduce an inconvenience for the user, making the product (designed to reduce such things) functionally worthless.

Assuming the product discussed here could be made, and (perhaps more importantly) made to be commercially viable, the data made available from it could be of interest to various parties. Marketing, the great machine that powers so much of modern life, could surely find uses for data about user’s buying habits. These could depend on anything from time of year, location, upcoming events (be they local or global), to age and gender. If data on these factors existed already (highly likely in this day and age) potentially valuable information that could be generalized to fit demographic models could be gathered. If the service was realized through a mobile application as previously proposed, this opens up a goldmine of information (legality depending, presumably) already linked to the user.

Data could be collected and processed, based on any number of factors, to ascertain the buying habits of, for instance, a family of four, an elderly couple, or a flat of students. These habits likely differ greatly, and insights gathered here could be used to build profiles of users and help to better target products, or improve existing products. 

The effect of how user’s perceive products in the media might change buying patterns: did sales of Nestle products change in certain demographics (Nestle surely already knowing the affect on overall sales) after various articles[16,17,18] were published pointing out the seemingly inhumane practices of the company. Swings in the economy may have a similar effect—are some demographics quicker to adopt cheaper products in the case of economic downturns. The possible uses of the data are endless, and surely the more meaningful end of the spectrum would be of use to somebody. 

The information flowing here need not be one-way, however. There are likely many applications for the data produced by an IoT device capable of tracking inventories in the home, but could the product and service be improved with data from other places? Certainly, some communication would be needed in the case of barcode lookups or similar, and the product could always be improved down the line with more data for backing up image recognition techniques or product classification. The product could interact with other IoT devices in some way, perhaps devices monitoring temperature in the home could affect the rate at which the inventory assumed some products would spoil, if such a feature was implemented. Systems already exist that link together a multitude of IoT devices[19], and this product could surely be incorporated into such a thing, to ease adoption.

Once again marketing could come into play here—data gathered about the user could be compared against similar existing data, and recommendations for products could be made. Suggestions for, say, restaurants could even be made based on the user’s dietary preferences. This recommendation system could be taken even further to suggest dietary or lifestyle changes the user could make, feeding back into the system. Combining products usage and search data, for instance, might make for interesting discoveries about people with common skin problems or allergies, what products they favour, and how they found about them. All of this would have to be done in a way that wouldn’t otherwise harm the user experience, as aggressive advertising, especially if so personally targeted, is at best unpleasant, and at worst alarming.

Overall the product described here is likely of little worth, too complex to implement in a way that would make it valuable, and too simple to be useful otherwise. If, somewhere in the distant future, the human race is existing off standardized mass-manufactured rations, with serial identification, predictable expiry dates, and extremely limited variety, then perhaps such an inventory system would work, but hopefully such a grim time does not come to pass and we can continue to enjoy produce that is awkward and inconsistent to track in a virtual format. In any case, interaction design, like any design field, is full of trade-offs and compromises to try and engineer the best possible user experience, and some system to track a person’s inventory could be implementable and usable, but would likely not be worth the costs for such a minor problem. As such, I would be surprised if such a system would ever be commercially viable, even being potentially creatable. Nevertheless, it poses a set of issues that are thought provoking, at least to this novice designer, and I have at the very least learned some of the basic principals and challenges faced within the fields of  IoT and IxD.
=======================================
Consistency, perceivability, learnability, predictability, feedback
consistent, visible (cues on what to click etc), learnable, predictable, feedback

[0] http://www.rfidjournal.com/articles/view?4986 - 29/9/2015
[1] http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=y.2060 - section 3.2.2 - 29/9/2015
[2] http://uk.businessinsider.com/how-the-internet-of-things-market-will-grow-2014-10?r=US&IR=T 1/10/2015
[3] https://nest.com/uk/
[4] http://www.belkin.com/uk/Products/home-automation/c/wemo-home-automation/
[5] http://www.ixda.org/about/ixda-mission - "Definition of IxD" - 29/9/2015
[6] http://www.interactiondesign.com.au/history - "It was not until the late 1980s when the term interaction design was advocated by designers Bill Moggridge and Bill Verplank." - 29/9/2015
[7] https://cristianweierick.wordpress.com/2013/10/30/5-essential-core-principles-of-interactive-design/ - 29/5/2015
[8] http://www.givegoodux.com/use-5-principles-interaction-design-supercharge-ui-part-1-5/ - 29/5/2015
[9] http://www.givegoodux.com/visibility-5-principles-interaction-design-supercharge-ui-2-5/ - 29/5/2015
[10] http://www.givegoodux.com/learnability-5-principles-interaction-design-supercharge-ui-3-5/ - 29/5/2015
[11] http://www.givegoodux.com/predictability-5-principles-of-interaction-design-to-supercharge-your-ui-4-of-5/ - 29/5/2015
[12] http://www.givegoodux.com/feedback-5-principles-interaction-design-supercharge-ui-5-5/ - 29/5/2015
[13] http://www.uxbooth.com/articles/complete-beginners-guide-to-interaction-design/ - 29/5/2015
[14] http://www.geek.com/geek-cetera/toshiba-develops-object-recognition-tech-for-food-1474869/ 20/9/2015
[15] http://www.rfidarena.com/2013/4/11/grocery-industry-operations-are-facing-a-real-paradigm-shift.aspx 1/10/2015
[16] http://www.theguardian.com/sustainable-business/nestle-baby-milk-scandal-food-industry-standards 1/10/2015
[17] http://www.businessinsider.com/nestles-infant-formula-scandal-2012-6?op=1&IR=T 1/10/2015
[18] http://www.theguardian.com/business/2007/may/15/medicineandhealth.lifeandhealth 1/10/2015
[19] http://www.smartthings.com/uk/works-with-smartthings 1/10/2015
